import{j as a}from"./jsx-runtime-SKoiH9zj.js";import{c}from"./index-NZcV-alF.js";import{T as h}from"./Typography-DdMJCn-_.js";import{a3 as W}from"./regex-CmAMYcQS.js";const y=t=>t.replace(W,"").length,N=({capacity:t=200,name:f,label:j,value:o="",variant:b="primary",error:u,helperText:X="",disabled:g=!1,required:m=!1,placeholder:C="Enter text",className:_="",onChange:l,onBlur:D,onFocus:L,onPaste:p,rows:z=4,cols:B=40,resize:K=!1,errorText:M,...d})=>{const S=c("ff-textarea-label ff-textarea-label--"+b,{"ff-textarea-label--danger":u}),A=c(`ff-textarea ff-textarea--${b}`,_,{"ff-textarea--danger":u,"ff-textarea--resize":!K}),F=c("ff-textarea-container",{"ff-textarea-container--disabled":g,"ff-textarea-container--float":!!o}),T=u&&m||!o,H=T?a.jsx("span",{className:"ff-textarea-error-text",children:a.jsx(h,{fontSize:10,children:M})}):null,I=e=>{const n=e.target.value;y(n)<=t&&(l==null||l(e))},P=e=>{var n;if(e.key==="Enter"){const s=e.currentTarget,r=s.selectionStart;(s.value.substring(0,r).split(`
`).pop()||"").trim()===""&&e.preventDefault()}(n=d.onKeyDown)==null||n.call(d,e)},R=e=>{e.preventDefault();const s=e.clipboardData.getData("text/plain").split(`
`).filter(i=>i.trim()!=="").join(`
`),r=e.currentTarget,q=r.selectionStart,V=r.selectionEnd,x=r.value.slice(0,q),E=r.value.slice(V),k=y(x+E);let w=t-k,v="";for(const i of s)i===`
`?v+=i:w>0&&(v+=i,w--);const U=x+v+E,G={...e,target:{...r,value:U}};l==null||l(G),p==null||p(e)};return a.jsxs("div",{className:F,children:[a.jsx("label",{htmlFor:f,className:c("ff-textarea-label-container",{"ff-textarea-label-container--danger":u}),children:a.jsxs("span",{className:S,children:[m&&a.jsx("span",{className:"required-asterisk",children:"*"}),j]})}),a.jsx("textarea",{name:f,value:o,id:f,className:A,placeholder:C+"...",disabled:g,onChange:I,onBlur:D,onFocus:L,onKeyDown:P,onPaste:R,required:m,rows:z,cols:B,...d}),a.jsxs("div",{className:T?"ff-textarea-error-alignment":"msg-character-count",children:[H,t>0&&a.jsxs("div",{className:"ff-textarea-character-count",children:[a.jsxs(h,{fontSize:8,children:[y(o),"/"]}),a.jsx(h,{fontSize:8,children:t})]})]})]})};try{N.displayName="Textarea",N.__docgenInfo={description:"",displayName:"Textarea",props:{name:{defaultValue:null,description:"Name | name of the textarea field",name:"name",required:!0,type:{name:"string"}},label:{defaultValue:null,description:"Label | field label to be displayed",name:"label",required:!0,type:{name:"string"}},value:{defaultValue:{value:""},description:"value | textarea field value",name:"value",required:!1,type:{name:"string"}},variant:{defaultValue:{value:"primary"},description:"variants to set color/style of the textarea field",name:"variant",required:!1,type:{name:"enum",value:[{value:'"primary"'},{value:'"default"'}]}},error:{defaultValue:null,description:"error | If true, error message will be displayed",name:"error",required:!1,type:{name:"boolean"}},helperText:{defaultValue:{value:""},description:"helperText | error, success, warning message to be shown",name:"helperText",required:!1,type:{name:"string"}},disabled:{defaultValue:{value:"false"},description:"to disable the textarea field",name:"disabled",required:!1,type:{name:"boolean"}},required:{defaultValue:{value:"false"},description:"if true, textarea field will be mandatory",name:"required",required:!1,type:{name:"boolean"}},placeholder:{defaultValue:{value:"Enter text"},description:"placeholder for the textarea field",name:"placeholder",required:!1,type:{name:"string"}},className:{defaultValue:{value:""},description:"classnames to style the textarea field",name:"className",required:!1,type:{name:"string"}},onChange:{defaultValue:null,description:"onChange, onKeyDown, onBlur, onFocus actions",name:"onChange",required:!1,type:{name:"((event: ChangeEvent<HTMLTextAreaElement>) => void)"}},onKeyDown:{defaultValue:null,description:"",name:"onKeyDown",required:!1,type:{name:"((event: KeyboardEvent<HTMLTextAreaElement>) => void)"}},onBlur:{defaultValue:null,description:"",name:"onBlur",required:!1,type:{name:"((event: FocusEvent<HTMLTextAreaElement, Element>) => void)"}},onFocus:{defaultValue:null,description:"",name:"onFocus",required:!1,type:{name:"((event: FocusEvent<HTMLTextAreaElement, Element>) => void)"}},onPaste:{defaultValue:null,description:"",name:"onPaste",required:!1,type:{name:"((event: ClipboardEvent<HTMLTextAreaElement>) => void)"}},id:{defaultValue:null,description:"id to select the textarea field uniquely",name:"id",required:!1,type:{name:"string"}},autoComplete:{defaultValue:null,description:"if on, suggestion popup will be displayed",name:"autoComplete",required:!1,type:{name:"enum",value:[{value:'"on"'},{value:'"off"'}]}},capacity:{defaultValue:{value:"200"},description:"capacity | Maximum number of characters allowed in the textarea.",name:"capacity",required:!1,type:{name:"number"}},rows:{defaultValue:{value:"4"},description:`rows | Number of visible text lines in the textarea.
Used to control the height of the textarea.`,name:"rows",required:!1,type:{name:"number"}},cols:{defaultValue:{value:"40"},description:`cols | Number of visible character widths in the textarea.
Used to control the width of the textarea.`,name:"cols",required:!1,type:{name:"number"}},resize:{defaultValue:{value:"false"},description:"for resizing purpose",name:"resize",required:!1,type:{name:"boolean"}},errorText:{defaultValue:null,description:"",name:"errorText",required:!1,type:{name:"string"}}}}}catch{}export{N as T};
