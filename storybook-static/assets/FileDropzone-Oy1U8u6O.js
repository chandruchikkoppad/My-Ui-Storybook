import{j as e}from"./jsx-runtime-SKoiH9zj.js";import{r}from"./index-DJO9vBfz.js";import{a as D}from"./getExtension-B1kDXIq5.js";import{c as k}from"./checkEmpty-xi6SckPb.js";import{I as R}from"./Icon-BnrH6PuI.js";import{c as ee}from"./index-NZcV-alF.js";import{B as ie}from"./Button-CpFgCZ6s.js";import{T as L}from"./Typography-DdMJCn-_.js";import{R as te}from"./RadioGroup-CXtVZnPC.js";import{T as z}from"./Tooltip-jHEmaokv.js";const K=i=>{const{accept:t,multiple:v,maxSize:f,maxFiles:d,onMaxFilesError:g,onDrop:m,maxSizeErrorMessage:q,invalidFileMessage:h,fileExistMessage:u,validateMIMEType:j=!1,isApiResponseError:_}=i,[p,b]=r.useState({accepted:[],rejected:[]}),[I,C]=r.useState(!1),S=(a,l)=>t.includes(a.type)?!0:[".ipa",".yml",".md",".pem",".properties"].includes(l)&&t.includes(l),V=r.useCallback(a=>{const l=[];f&&a.size>f&&l.push({message:q||"File size exceeds the limit",code:"file-size-exceeded"});const n=D(a).toLowerCase();return j?(!S(a,n)||_)&&l.push({message:h||"Unsupported File Format",code:"file-invalid-type"}):t&&!t.includes(n)&&l.push({message:h||"Unsupported File Format",code:"file-invalid-type"}),p.accepted.some(s=>s.name===a.name&&D(s)===D(a))&&l.push({message:u||"File already exists.",code:"file-exists"}),l},[t,f,p,q,h,u]),F=r.useCallback((a,l)=>{if(a.name===l.name&&a.size===l.size)return;const n=V(l);b(c=>{const s=c.accepted.filter(M=>M.name!==a.name),x=c.rejected.filter(M=>M.file.name!==a.name);return{accepted:k(n)?[...s,l]:s,rejected:k(n)?x:[...x,{file:l,errors:n}]}})},[V]),$=r.useCallback(a=>{const l=document.createElement("input");l.type="file",l.accept=t.join(","),l.onchange=n=>{var s,x;const c=(x=(s=n.target)==null?void 0:s.files)==null?void 0:x[0];c&&F(a,c)},l.click()},[t,F]),A=r.useCallback(a=>{b(l=>({accepted:l.accepted.filter(n=>n!==a),rejected:l.rejected.filter(n=>n.file!==a)}))},[]),B=r.useCallback(a=>{A(a)},[A]),E=r.useCallback(a=>{var x,M,O;a.preventDefault(),a.stopPropagation(),C(!1);const l="dataTransfer"in a?(x=a.dataTransfer)==null?void 0:x.files:(M=a.target)==null?void 0:M.files;if(!l)return;const n=Array.from(l);if(d&&n.length>d){g&&g();return}const c=[],s=[];n.forEach(o=>{const y=V(o);k(y)?c.push(o):s.push({file:o,errors:y})}),b(o=>({accepted:[...o.accepted,...c.filter(y=>!o.accepted.some(w=>w.name===y.name&&D(w)===D(y)))],rejected:[...o.rejected,...s.filter(y=>!o.rejected.some(w=>w.file.name===y.file.name&&D(w.file)===D(y.file)))]})),"dataTransfer"in a?(O=a.dataTransfer)==null||O.clearData():a.target.value="",m&&m(c,s,a)},[d,V,g,m]),T=r.useCallback(a=>{a.preventDefault(),C(!0)},[]),P=r.useCallback(()=>{C(!1)},[]),G=r.useCallback(()=>({onDragOver:T,onDragLeave:P,onDrop:E}),[T,P,E,I]),J=r.useCallback(()=>({type:"file",onChange:E,multiple:v,accept:t?t.join(","):""}),[E,v,t]);return{getRootProps:G,getInputProps:J,acceptedFiles:p.accepted,rejectedFiles:p.rejected,isDragActive:I,handleRemoveClick:B,handleReplaceClick:$}};try{K.displayName="useFileDropzone",K.__docgenInfo={description:"",displayName:"useFileDropzone",props:{accept:{defaultValue:null,description:"",name:"accept",required:!0,type:{name:"string[]"}},multiple:{defaultValue:null,description:"",name:"multiple",required:!1,type:{name:"boolean"}},maxSize:{defaultValue:null,description:"",name:"maxSize",required:!1,type:{name:"number"}},maxFiles:{defaultValue:null,description:"",name:"maxFiles",required:!1,type:{name:"number"}},onDrop:{defaultValue:null,description:"",name:"onDrop",required:!1,type:{name:"((acceptedFiles: File[], rejectedFiles: FileRejection[], event: ChangeEvent<HTMLInputElement> | DragEvent<HTMLElement>) => void)"}},onMaxFilesError:{defaultValue:null,description:"",name:"onMaxFilesError",required:!1,type:{name:"(() => void)"}},maxSizeErrorMessage:{defaultValue:null,description:"",name:"maxSizeErrorMessage",required:!1,type:{name:"string"}},invalidFileMessage:{defaultValue:null,description:"",name:"invalidFileMessage",required:!1,type:{name:"string"}},fileExistMessage:{defaultValue:null,description:"",name:"fileExistMessage",required:!1,type:{name:"string"}},validateMIMEType:{defaultValue:null,description:"",name:"validateMIMEType",required:!1,type:{name:"boolean"}},isApiResponseError:{defaultValue:null,description:"",name:"isApiResponseError",required:!1,type:{name:"boolean"}}}}}catch{}const Q=({selectedFile:i,onFileRemoveClick:t,onFileReplaceClick:v,selectedRadioOption:f,setShowDrawer:d,setFileContent:g})=>{const m=r.useRef(null),q=()=>{var u;if((f==null?void 0:f.value)==="Test Data"){d==null||d(!0);return}(u=m.current)==null||u.click()},h=u=>{var p;const j=(p=u.target.files)==null?void 0:p[0],_=new FileReader;j&&(_.readAsText(j),_.onload=async()=>{const b=await _.result;g&&g(b)},v==null||v(j))};return e.jsxs("div",{className:"ff-webservice-file-wrapper",children:[e.jsx("div",{className:"ff-file-info",children:e.jsx(e.Fragment,{children:e.jsx(z,{title:i,children:e.jsx(L,{lineHeight:"18px",fontWeight:"semi-bold",color:"var(--text-color)",className:"ff-webservice-file-name",children:i})})})}),e.jsx(e.Fragment,{children:e.jsx(z,{title:"Remove",children:e.jsx(R,{name:"close",height:12,width:12,hoverEffect:!0,onClick:t})})}),e.jsxs(e.Fragment,{children:[e.jsx(z,{title:"Replace",children:e.jsx(R,{name:"replace_file",color:"var(--icons-default-color)",height:16,width:16,hoverEffect:!0,onClick:q})}),e.jsx("input",{type:"file",ref:m,className:"ff-input-ref",onChange:h})]})]})};try{Q.displayName="RadioFilePreview",Q.__docgenInfo={description:"",displayName:"RadioFilePreview",props:{selectedFile:{defaultValue:null,description:"",name:"selectedFile",required:!0,type:{name:"string"}},error:{defaultValue:null,description:"",name:"error",required:!1,type:{name:"string"}},onFileRemoveClick:{defaultValue:null,description:"",name:"onFileRemoveClick",required:!1,type:{name:"(() => void)"}},onFileReplaceClick:{defaultValue:null,description:"",name:"onFileReplaceClick",required:!1,type:{name:"((file: File | null) => void)"}},setSelectedFile:{defaultValue:null,description:"",name:"setSelectedFile",required:!1,type:{name:"((file: File | null) => void)"}},selectedRadioOption:{defaultValue:null,description:"",name:"selectedRadioOption",required:!1,type:{name:"Option"}},setShowDrawer:{defaultValue:null,description:"",name:"setShowDrawer",required:!1,type:{name:"((value: boolean | ((prevState: boolean) => boolean)) => void)"}},setFileContent:{defaultValue:null,description:"",name:"setFileContent",required:!1,type:{name:"((data: string) => void)"}},fileContent:{defaultValue:null,description:"",name:"fileContent",required:!1,type:{name:"string"}}}}}catch{}const X=({icon:i,primaryLabel:t,secondaryLabel:v,buttonLabel:f,getRootProps:d,getInputProps:g,isDragActive:m=!1,height:q=188,isWebServiceFileDropZone:h=!1,selectedRadioOption:u,radioOptions:j,handleOptionChange:_,selectedFile:p,setSelectedFile:b,handleRemoveFile:I,isDisable:C,setShowDrawer:S,setFileContent:V})=>{const F=(p==null?void 0:p.name)&&h;return e.jsx("div",{...d(),className:ee("ff-file-dropzone",{"ff-file-dropzone--active":m,"ff-file-dropzone--webservice-file":F,"ff-file-dropzone--webservice-container":h,"ff-disable-file-dropzone-wrapper":C}),style:{height:q},children:F?e.jsx(Q,{selectedFile:p.name,onFileRemoveClick:I,onFileReplaceClick:b,setSelectedFile:b,selectedRadioOption:u,setShowDrawer:S,setFileContent:V}):e.jsxs(e.Fragment,{children:[e.jsx("div",{className:"ff-file-dropzone-content__icon",children:i}),e.jsxs("div",{className:"ff-file-dropzone-content__labels",children:[e.jsx(L,{as:"p",fontWeight:"semi-bold",lineHeight:"18px",textAlign:"center",color:"var(--text-color)",children:t}),e.jsx(L,{as:"p",lineHeight:"18px",textAlign:"center",color:"var(--text-color)",children:v}),h?e.jsxs("div",{className:"ff-radio-group-wrapper",children:[e.jsxs(L,{fontWeight:"semi-bold",children:[" ","Choose file from"," "]}),e.jsx(te,{name:"radio_btn_file_dropzone",options:j??[{label:"Default Label",value:"default_value"}],selectedValue:u==null?void 0:u.value,onChange:_})]}):e.jsx(ie,{variant:"primary",label:f,className:"choose-file-btn",disabled:C,children:e.jsx("input",{...C?{style:{cursor:"not-allowed"},disabled:!0}:g()})})]})]})})};try{X.displayName="Dropzone",X.__docgenInfo={description:"",displayName:"Dropzone",props:{icon:{defaultValue:null,description:"",name:"icon",required:!0,type:{name:"ReactNode"}},primaryLabel:{defaultValue:null,description:"",name:"primaryLabel",required:!0,type:{name:"string"}},secondaryLabel:{defaultValue:null,description:"",name:"secondaryLabel",required:!0,type:{name:"string"}},buttonLabel:{defaultValue:null,description:"",name:"buttonLabel",required:!0,type:{name:"string"}},getRootProps:{defaultValue:null,description:"",name:"getRootProps",required:!0,type:{name:"() => any"}},getInputProps:{defaultValue:null,description:"",name:"getInputProps",required:!0,type:{name:"() => any"}},isDragActive:{defaultValue:{value:"false"},description:"",name:"isDragActive",required:!1,type:{name:"boolean"}},height:{defaultValue:{value:"188"},description:"",name:"height",required:!1,type:{name:"string | number"}},isWebServiceFileDropZone:{defaultValue:{value:"false"},description:"",name:"isWebServiceFileDropZone",required:!1,type:{name:"boolean"}},selectedRadioOption:{defaultValue:null,description:"",name:"selectedRadioOption",required:!1,type:{name:"Option"}},radioOptions:{defaultValue:null,description:"",name:"radioOptions",required:!1,type:{name:"RadioOption[]"}},handleOptionChange:{defaultValue:null,description:"",name:"handleOptionChange",required:!1,type:{name:"((option: RadioOption) => void)"}},selectedFile:{defaultValue:null,description:"",name:"selectedFile",required:!1,type:{name:"File | DynamicObj | null"}},setSelectedFile:{defaultValue:null,description:"",name:"setSelectedFile",required:!1,type:{name:"((file: File | DynamicObj | null) => void)"}},handleFileChange:{defaultValue:null,description:"",name:"handleFileChange",required:!1,type:{name:"((event: ChangeEvent<HTMLInputElement>) => void)"}},handleRemoveFile:{defaultValue:null,description:"",name:"handleRemoveFile",required:!1,type:{name:"(() => void)"}},isDisable:{defaultValue:null,description:"",name:"isDisable",required:!1,type:{name:"boolean"}},setShowDrawer:{defaultValue:null,description:"",name:"setShowDrawer",required:!1,type:{name:"((value: boolean | ((prevState: boolean) => boolean)) => void)"}},setFileContent:{defaultValue:null,description:"",name:"setFileContent",required:!1,type:{name:"((data: string) => void)"}},fileContent:{defaultValue:null,description:"",name:"fileContent",required:!1,type:{name:"string"}}}}}catch{}const U=({file:i,error:t,onRemoveClick:v,onReplaceClick:f,onUploadFile:d,isUploadIcon:g,isRemoveDisabled:m=!1})=>e.jsxs("div",{className:"ff-file-details__item",children:[e.jsxs("div",{className:"ff-file-info",children:[e.jsx("div",{className:"ff-file-info__icon",children:e.jsx(R,{name:"file",color:"var(--icons-default-color)",height:16,width:16})}),e.jsxs("div",{className:"ff-file-info__name-wrapper",children:[e.jsx(z,{title:i==null?void 0:i.name,children:e.jsx(L,{lineHeight:"18px",fontWeight:"semi-bold",color:"var(--text-color)",className:"ff-file-info__name-wrapper__name",children:i==null?void 0:i.name})}),t&&e.jsx(L,{fontSize:8,color:"var(--error-light)",lineHeight:"12px",letterSpacing:"0.5px",children:t})]})]}),e.jsxs("div",{className:"ff-file-actions",children:[e.jsx("div",{className:"ff-file-actions__icon-replace",children:e.jsx(z,{title:"Replace",children:e.jsx(R,{name:"replace_file",color:"var(--icons-default-color)",height:16,width:16,hoverEffect:!0,onClick:()=>f(i)})})}),e.jsx("div",{className:"ff-file-actions__icon-remove",children:e.jsx(z,{disabled:m,title:"Remove",children:e.jsx(R,{disabled:m,name:"close_pill",height:16,width:16,hoverEffect:!0,onClick:()=>v(i)})})}),g&&e.jsx("div",{className:"ff-file-actions__icon-remove",children:e.jsx(z,{title:"Upload",children:e.jsx(R,{name:"upload_pill",height:16,width:16,hoverEffect:!0,color:"var(--default-icon-color)",onClick:()=>{d&&d()}})})})]})]},i.name);try{U.displayName="FilePreview",U.__docgenInfo={description:"",displayName:"FilePreview",props:{file:{defaultValue:null,description:"",name:"file",required:!0,type:{name:"File"}},error:{defaultValue:null,description:"",name:"error",required:!1,type:{name:"string"}},onRemoveClick:{defaultValue:null,description:"",name:"onRemoveClick",required:!0,type:{name:"(file: File) => void"}},onReplaceClick:{defaultValue:null,description:"",name:"onReplaceClick",required:!0,type:{name:"(file: File) => void"}},onUploadFile:{defaultValue:null,description:"",name:"onUploadFile",required:!1,type:{name:"VoidFunction"}},isUploadIcon:{defaultValue:null,description:"",name:"isUploadIcon",required:!1,type:{name:"boolean"}},isRemoveDisabled:{defaultValue:{value:"false"},description:"",name:"isRemoveDisabled",required:!1,type:{name:"boolean"}}}}}catch{}const Z=({icon:i=e.jsx(R,{name:"dropzone_icon",height:80,width:80,hoverEffect:!1}),primaryLabel:t="Drag & drop your file to upload",secondaryLabel:v="Or",buttonLabel:f="Choose File to upload",accept:d=[],multiple:g=!1,maxFiles:m,maxSize:q,onMaxFilesError:h,maxSizeErrorMessage:u="",invalidFileMessage:j="",fileExistMessage:_="",validateMIMEType:p=!1,width:b=640,height:I=188,getAcceptedFiles:C=()=>{},getRejectedFiles:S=()=>{},isWebServiceFileDropZone:V=!1,selectedRadioOption:F,radioOptions:$,handleOptionChange:A,selectedFile:B,setSelectedFile:E,handleFileChange:T,handleRemoveFile:P,isApiResponseError:G=!1,isDisable:J=!1,setShowDrawer:a,setFileContent:l,fileContent:n="",isUploadIcon:c=!1,onUploadFile:s})=>{const x=r.useRef(null),{getRootProps:M,getInputProps:O,acceptedFiles:o,rejectedFiles:y,isDragActive:w,handleRemoveClick:H,handleReplaceClick:W}=K({accept:d,multiple:g,maxFiles:m,maxSize:q,onMaxFilesError:h,maxSizeErrorMessage:u,invalidFileMessage:j,fileExistMessage:_,validateMIMEType:p,isApiResponseError:G});C(o),S(y);const ae=r.useMemo(()=>o.map(N=>e.jsx(U,{file:N,onRemoveClick:H,onReplaceClick:W,onUploadFile:s,isUploadIcon:c},N.name)),[o,H,W,c,s]);r.useEffect(()=>{(F==null?void 0:F.value)==="Local File"&&x.current&&x.current.click()},[F]),r.useEffect(()=>{!k(o)&&E&&E(o[0]||null)},[o,E]);const le=r.useMemo(()=>y.map(N=>{var Y;return e.jsx(U,{file:N.file,error:(Y=N.errors[0])==null?void 0:Y.message,onRemoveClick:H,onReplaceClick:W,onUploadFile:s,isUploadIcon:c},N.file.name)}),[y,H,W,c,s]);return e.jsxs("div",{className:ee("ff-file-dropzone-wrapper"),style:{width:`${b}px`},children:[e.jsx(X,{icon:i,primaryLabel:t,secondaryLabel:v,buttonLabel:f,getRootProps:M,getInputProps:O,isDragActive:w,height:`${I}px`,isWebServiceFileDropZone:V,selectedRadioOption:F,radioOptions:$??[{label:"Default Label",value:"default_value"}],handleOptionChange:A,selectedFile:B,handleFileChange:T,handleRemoveFile:P,setSelectedFile:E,isDisable:J,setShowDrawer:a,setFileContent:l,fileContent:n}),V&&e.jsx("input",{ref:x,type:"file",className:"ff-input-ref",onChange:T,accept:d.join(",")}),V?null:e.jsxs("div",{className:"ff-file-details-wrapper",style:{width:`${b}px`},children:[!k(o)&&e.jsx("div",{className:"ff-file-details",children:ae}),!k(y)&&e.jsx("div",{className:"ff-file-details",children:le})]})]})};try{Z.displayName="FileDropzone",Z.__docgenInfo={description:"",displayName:"FileDropzone",props:{icon:{defaultValue:{value:`(\r
    <Icon name="dropzone_icon" height={80} width={80} hoverEffect={false} />\r
  )`},description:"Icon to be displayed in the dropzone.",name:"icon",required:!1,type:{name:"ReactNode"}},primaryLabel:{defaultValue:{value:"Drag & drop your file to upload"},description:"Primary label to be shown in dropzone area",name:"primaryLabel",required:!1,type:{name:"string"}},secondaryLabel:{defaultValue:{value:"Or"},description:"Secondary label to be shown",name:"secondaryLabel",required:!1,type:{name:"string"}},buttonLabel:{defaultValue:{value:"Choose File to upload"},description:"Label to be shown in choose file/input button.",name:"buttonLabel",required:!1,type:{name:"string"}},accept:{defaultValue:{value:"[]"},description:". extension needs to be passed to allow the type of file to add or MIME type to be validate MIME type",name:"accept",required:!1,type:{name:"string[]"}},multiple:{defaultValue:{value:"false"},description:"To allow multiple selection or drop of files.",name:"multiple",required:!1,type:{name:"boolean"}},maxFiles:{defaultValue:null,description:"Maximum files to be dropped or selected at once.",name:"maxFiles",required:!1,type:{name:"number"}},maxSize:{defaultValue:null,description:"Maximum size of the file in numbers.",name:"maxSize",required:!1,type:{name:"number"}},onMaxFilesError:{defaultValue:null,description:"Function with state to get the boolean value when the maxFiles is less than dropped files.",name:"onMaxFilesError",required:!1,type:{name:"(() => void)"}},maxSizeErrorMessage:{defaultValue:{value:""},description:"To show error message if file size exceeds the max size",name:"maxSizeErrorMessage",required:!1,type:{name:"string"}},invalidFileMessage:{defaultValue:{value:""},description:"To show error message if file is not of accepted file type",name:"invalidFileMessage",required:!1,type:{name:"string"}},fileExistMessage:{defaultValue:{value:""},description:"To show error message if file already exist with same name and type",name:"fileExistMessage",required:!1,type:{name:"string"}},validateMIMEType:{defaultValue:{value:"false"},description:"To validate file type based on MIME type but mandatorily need to pass MIME type in accept props",name:"validateMIMEType",required:!1,type:{name:"boolean"}},width:{defaultValue:{value:"640"},description:"",name:"width",required:!1,type:{name:"string | number"}},height:{defaultValue:{value:"188"},description:"",name:"height",required:!1,type:{name:"string | number"}},getAcceptedFiles:{defaultValue:{value:"() => {}"},description:"Returns the accepted files in the state",name:"getAcceptedFiles",required:!1,type:{name:"((files: File[]) => void)"}},getRejectedFiles:{defaultValue:{value:"() => {}"},description:"Returns the rejected files in the state",name:"getRejectedFiles",required:!1,type:{name:"((files: FileRejection[]) => void)"}},isWebServiceFileDropZone:{defaultValue:{value:"false"},description:"If its used in WebService has some other functionality so need to pass boolean value.",name:"isWebServiceFileDropZone",required:!1,type:{name:"boolean"}},selectedRadioOption:{defaultValue:null,description:"Its the selected radio option as a string.",name:"selectedRadioOption",required:!1,type:{name:"RadioOption"}},radioOptions:{defaultValue:null,description:"Its the array of radio options in pattern of : {  label: string; value: string; }.",name:"radioOptions",required:!1,type:{name:"RadioOption[]"}},handleOptionChange:{defaultValue:null,description:"Its the function which updates the selected radio option.",name:"handleOptionChange",required:!1,type:{name:"((option: RadioOption) => void)"}},setSelectedFile:{defaultValue:null,description:"Its the File Name of File Selected from Local File.",name:"setSelectedFile",required:!1,type:{name:"((file: File | DynamicObj | null) => void)"}},selectedFile:{defaultValue:null,description:"Its the File Name of File Selected from Local File.",name:"selectedFile",required:!1,type:{name:"File | DynamicObj | null"}},handleFileChange:{defaultValue:null,description:"Its the function which updates the Selected file from Local Directory.",name:"handleFileChange",required:!1,type:{name:"((event: ChangeEvent<HTMLInputElement>) => void)"}},handleRemoveFile:{defaultValue:null,description:"Its the function which makes the selected File empty state.",name:"handleRemoveFile",required:!1,type:{name:"(() => void)"}},isApiResponseError:{defaultValue:{value:"false"},description:"When The Api for the response fails need to show error message.",name:"isApiResponseError",required:!1,type:{name:"boolean"}},isDisable:{defaultValue:{value:"false"},description:"If isDisable is true not able to access the FileDropzone",name:"isDisable",required:!1,type:{name:"boolean"}},setShowDrawer:{defaultValue:null,description:"Its the boolean value setted when the replace is clicked for TestData radio option .",name:"setShowDrawer",required:!1,type:{name:"((value: boolean | ((prevState: boolean) => boolean)) => void)"}},setFileContent:{defaultValue:null,description:"Its the File Name of File Selected from Local File.",name:"setFileContent",required:!1,type:{name:"((data: string) => void)"}},fileContent:{defaultValue:{value:""},description:"Its the string value present inside the readable file.",name:"fileContent",required:!1,type:{name:"string"}},isUploadIcon:{defaultValue:{value:"false"},description:"",name:"isUploadIcon",required:!1,type:{name:"boolean"}},onUploadFile:{defaultValue:null,description:"",name:"onUploadFile",required:!1,type:{name:"(() => void)"}}}}}catch{}export{Z as F};
