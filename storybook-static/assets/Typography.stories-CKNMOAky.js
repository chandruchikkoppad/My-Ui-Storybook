import{j as s}from"./jsx-runtime-SKoiH9zj.js";import"./index-DJO9vBfz.js";const n=()=>s.jsxs("div",{className:"typography-container",children:[s.jsxs("div",{className:"typography-header",children:[s.jsx("div",{children:"_Typography"}),s.jsx("span",{children:"Our design system leverages a purposeful set of typography styles. We'he stress-tested this typographic scale across dozens of projects to make sure it's robust enough to use across (almost) any project, while remaining as accessible as possible for everyone."})]}),s.jsx("div",{className:"font-display",children:s.jsxs("div",{className:"font-row",children:[s.jsxs("div",{className:"font-left",children:[s.jsx("div",{className:"font-name",children:"Poppins"}),s.jsx("div",{className:"font-sample",children:"Aa"}),s.jsxs("div",{className:"font-characters",children:["ABCDEFGHIJKLMNOPQRSTUVWXYZ",s.jsx("br",{}),"abcdefghijklmnopqrstuvwxyz",s.jsx("br",{}),"0123456789",s.jsx("br",{}),"!@#$%^&*()"]})]}),s.jsxs("div",{className:"font-right",children:[s.jsxs("div",{className:"font-right-section bold",children:[s.jsx("div",{className:"font-sample-large",children:"Aa"}),s.jsxs("div",{className:"font-info",children:[s.jsx("span",{children:"Bold"}),s.jsx("div",{className:"font-size",children:"font size: 12px = 0.75rem"})]})]}),s.jsxs("div",{className:"font-right-section semi-bold",children:[s.jsx("div",{className:"font-sample-large",children:"Aa"}),s.jsxs("div",{className:"font-info",children:[s.jsx("span",{children:"SemiBold"}),s.jsx("div",{className:"font-size",children:"font size: 12px = 0.75rem"})]})]}),s.jsxs("div",{className:"font-right-section regular",children:[s.jsx("div",{className:"font-sample-large",children:"Aa"}),s.jsxs("div",{className:"font-info",children:[s.jsx("span",{children:"Regular"}),s.jsx("div",{className:"font-size",children:"font size: 12px = 0.75rem"})]})]})]})]})})]}),t={title:"StyleGuide/Typography",component:n,tags:["autodocs"]},e={args:{}};var a,r,i;e.parameters={...e.parameters,docs:{...(a=e.parameters)==null?void 0:a.docs,source:{originalSource:`{
  args: {}
}`,...(i=(r=e.parameters)==null?void 0:r.docs)==null?void 0:i.source}}};const c=["AllFonts"];export{e as AllFonts,c as __namedExportsOrder,t as default};
