import{j as e}from"./jsx-runtime-SKoiH9zj.js";import{r as p,R as O}from"./index-DJO9vBfz.js";import{I as m}from"./Icon-BnrH6PuI.js";import{G as I}from"./index-CFN9ZEHn.js";import{c as t}from"./index-NZcV-alF.js";import{B as j}from"./Button-CpFgCZ6s.js";/* empty css                */import"./Typography-DdMJCn-_.js";const x=({isOpen:o,isMaximized:s,width:i="800px",height:a="432px",header:d,children:c,zIndex:n=999,icons:r,downloadFileIcon:v=!1,showheader:g=!0,top:M="0",overlay:w=!0,downloadHandler:y})=>{if(!o)return null;const z=e.jsx("div",{className:t("ff-overviewmodal-overlay"),style:{background:w?"var(--default-icon-color)":void 0,zIndex:n},children:e.jsxs("div",{className:t("ff-overviewmodal-container",{"ff-overviewmaximized-container":s}),style:{"--modal-width":i,"--modal-height":a,"--modal-top":M},children:[g&&e.jsxs("div",{className:t("ff-overviewmodal-header"),children:[d,e.jsxs("div",{className:t("ff-overviewmodal-icons"),children:[v&&e.jsx(m,{width:16,height:16,name:"download_file",onClick:y}),r]})]}),e.jsx("div",{className:t("ff-overviewmodal-body"),children:c})]})});return I.createPortal(z,document.body)};try{overviewModal.displayName="overviewModal",overviewModal.__docgenInfo={description:"",displayName:"overviewModal",props:{isOpen:{defaultValue:null,description:"",name:"isOpen",required:!0,type:{name:"boolean"}},isMaximized:{defaultValue:null,description:"",name:"isMaximized",required:!0,type:{name:"boolean"}},width:{defaultValue:{value:"800px"},description:"",name:"width",required:!1,type:{name:"string"}},height:{defaultValue:{value:"432px"},description:"",name:"height",required:!1,type:{name:"string"}},header:{defaultValue:null,description:"",name:"header",required:!1,type:{name:"ReactNode"}},icons:{defaultValue:null,description:"",name:"icons",required:!1,type:{name:"ReactNode"}},downloadFileIcon:{defaultValue:{value:"false"},description:"",name:"downloadFileIcon",required:!1,type:{name:"boolean"}},onClose:{defaultValue:null,description:"",name:"onClose",required:!0,type:{name:"() => void"}},onMaximizeToggle:{defaultValue:null,description:"",name:"onMaximizeToggle",required:!1,type:{name:"(() => void)"}},showheader:{defaultValue:{value:"true"},description:"",name:"showheader",required:!1,type:{name:"boolean"}},top:{defaultValue:{value:"0"},description:"",name:"top",required:!1,type:{name:"string"}},overlay:{defaultValue:{value:"true"},description:"",name:"overlay",required:!1,type:{name:"boolean"}},downloadHandler:{defaultValue:null,description:"",name:"downloadHandler",required:!0,type:{name:"() => void"}},zIndex:{defaultValue:{value:"999"},description:"",name:"zIndex",required:!1,type:{name:"number"}}}}}catch{}const R={title:"Components/OverviewModal",component:x,parameters:{layout:"centered"},tags:["autodocs"],args:{width:"800px",top:"0",height:"400px",zIndex:999,isOpen:!1,showheader:!0,header:e.jsx(e.Fragment,{}),children:e.jsx(e.Fragment,{children:e.jsx("h2",{children:"Default Modal Content"})}),icons:null,downloadFileIcon:!1,overlay:!0},argTypes:{isOpen:{control:"boolean",description:"Toggle modal visibility"},width:{control:"text",description:"Custom width for the modal"},top:{control:"text",description:"Custom maximized top for the modal"},height:{control:"text",description:"Custom height for the modal"},header:{control:"text",description:"Header content for the modal"},children:{control:"text",description:"Body content for the modal"},downloadFileIcon:{control:"boolean",description:"Displays the download file icon"}}},l={render:o=>{const[s,i]=p.useState(o.isOpen),[a,d]=p.useState(o.isMaximized);O.useEffect(()=>{i(o.isOpen)},[o.isOpen]);const c=()=>{i(!0)},n=()=>i(!1),r=()=>d(!a);return e.jsxs("div",{children:[e.jsx(j,{label:"Open Modal",variant:"primary",onClick:c}),e.jsx(x,{...o,isOpen:s,isMaximized:a,onClose:n,onMaximizeToggle:r,icons:e.jsxs(e.Fragment,{children:[e.jsx(m,{width:16,height:16,onClick:r,name:a?"maximize_script":"minimize_script"}),e.jsx(m,{width:16,height:16,onClick:n,name:"close"})]})})]})}};var u,f,h;l.parameters={...l.parameters,docs:{...(u=l.parameters)==null?void 0:u.docs,source:{originalSource:`{
  render: (args: OverviewModalProps) => {
    const [isOpen, setIsOpen] = useState(args.isOpen);
    const [isMaximized, setIsMaximized] = useState(args.isMaximized);
    React.useEffect(() => {
      setIsOpen(args.isOpen);
    }, [args.isOpen]);
    const openModal = () => {
      setIsOpen(true);
    };
    const closeModal = () => setIsOpen(false);
    const toggleMaximize = () => setIsMaximized(!isMaximized);
    return <div>\r
        <Button label={'Open Modal'} variant={'primary'} onClick={openModal} />\r
        <OverviewModal {...args} isOpen={isOpen} isMaximized={isMaximized} onClose={closeModal} onMaximizeToggle={toggleMaximize} icons={<>\r
              <Icon width={16} height={16} onClick={toggleMaximize} name={isMaximized ? 'maximize_script' : 'minimize_script'} />\r
              <Icon width={16} height={16} onClick={closeModal} name="close" />\r
            </>} />\r
      </div>;
  }
}`,...(h=(f=l.parameters)==null?void 0:f.docs)==null?void 0:h.source}}};const T=["Default"];export{l as Default,T as __namedExportsOrder,R as default};
