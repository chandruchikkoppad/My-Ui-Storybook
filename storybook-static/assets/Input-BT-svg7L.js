import{j as n}from"./jsx-runtime-SKoiH9zj.js";import{r as N}from"./index-DJO9vBfz.js";import{c as i}from"./index-NZcV-alF.js";import{c as J}from"./checkEmpty-xi6SckPb.js";import{I as M}from"./Icon-BnrH6PuI.js";const j=N.forwardRef(({type:r="text",variant:x="primary",name:y="",label:g,disabled:f=!1,required:k=!1,placeholder:_="Enter input",value:s=r==="number"?0:"",helperText:b="",error:u,noBorder:F,className:L="",onChange:t,onBlur:h,onFocus:T,autoComplete:B="off",autoFocus:K=!1,minValue:d=-1/0,maxValue:V=1/0,transparentBackground:H=!1,size:I="small",isLabelRequired:w=!0,onClick:$,onKeyUp:D,reserveHelperTextSpace:q=!1,setUpdatedNumberValue:p=()=>{},...R},z)=>{const S=!J(s),U=r==="number",m=d!==void 0&&parseInt(d,10)||0,c=V!==void 0&&parseInt(V,10)||1/0,[v,o]=N.useState(s),E=l=>{const e=parseInt(s.toString(),10)||0;let a=e;l==="increment"?a=Math.min(e+1,c):l==="decrement"&&(a=Math.max(e-1,m)),o(a),p(a)},A=l=>{let e=l.target.value;if(r==="number"){if(e===""||e==="-"){o(e),p(e),t==null||t(l);return}const a=Number(e);isNaN(a)||(a>=m&&a<=c?(o(a),p(a),t==null||t(l)):o(v))}else o(e),t==null||t(l)},G=l=>{if(r==="number"){let e=Number(v);if((v===""||v==="-")&&(e=d),isNaN(e)||e<m||e>c){const a=Math.max(m,Math.min(e,c));o(a),p(a)}}h==null||h(l)};return n.jsx("fieldset",{className:i("ff-input-fieldset",{"ff-input-fieldset--disabled":f}),children:n.jsxs("div",{className:i("ff-input-container",{"ff-input-container--float":S,"ff-input-container--disabled":!!f}),children:[w&&n.jsxs("label",{className:i(`ff-input-label-container ff-input-label-container--${I}`,{"ff-input-label-container--danger":!!u}),htmlFor:y,children:[k&&n.jsx("span",{className:"required-asterisk",children:"*"}),n.jsx("span",{className:i(`ff-input-label ff-input-label--${x}`,{"ff-input-label--no-hover":!!s,"ff-input-label--disabled":!!f,"ff-input-label--danger":!!u}),children:g})]}),n.jsx("input",{ref:z,name:y,value:s,type:r,spellCheck:!1,id:y,className:i(`ff-input ff-input-${x} default-input ff-input--${I}`,{"ff-input--transparentBackground":!!H,"ff-input--no-hover":!!s,"ff-input--disabled":!!f,"ff-input--danger":!!u,"ff-input--no-border":!!F,"ff-input--placeholder":!w,"ff-input--number":U},`${L}`),placeholder:_,disabled:f,onChange:A,onFocus:T,onBlur:G,autoComplete:B,autoFocus:K,min:d,max:V,onClick:$,onKeyUp:D,...R}),r==="number"&&n.jsxs("div",{className:i("arrow-container",{"arrow-container-label":g,"arrow-container-label-error":!!u}),children:[n.jsx(M,{name:"arrow_up",hoverEffect:!1,height:7,width:12,color:"var(--text-area-default-color)",onClick:()=>E("increment")}),n.jsx(M,{name:"arrow_down",height:7,width:12,color:"var(--text-area-default-color)",onClick:()=>E("decrement")})]}),q&&n.jsx("span",{className:i("ff-input-message",{"ff-input-message--space":!!q,"ff-input-message--danger":!!u}),children:b}),!q&&b&&u&&n.jsx("span",{className:i("ff-input-message",{"ff-input-message--danger":!!u}),children:b})]})})});try{j.displayName="Input",j.__docgenInfo={description:"",displayName:"Input",props:{name:{defaultValue:{value:""},description:"Name | name of the input field",name:"name",required:!1,type:{name:"string"}},label:{defaultValue:null,description:"Label | field label to be displayed",name:"label",required:!1,type:{name:"string"}},value:{defaultValue:{value:"type === 'number' ? 0 : ''"},description:"value | input field value",name:"value",required:!1,type:{name:"string | number"}},variant:{defaultValue:{value:"primary"},description:"variants to set color/style of the input field",name:"variant",required:!1,type:{name:"enum",value:[{value:'"primary"'},{value:'"default"'}]}},type:{defaultValue:{value:"text"},description:"type to set color/style of the input field",name:"type",required:!1,type:{name:"enum",value:[{value:'"number"'},{value:'"text"'},{value:'"password"'},{value:'"email"'},{value:'"url"'},{value:'"time"'}]}},error:{defaultValue:null,description:"error | If true, error message will be displayed",name:"error",required:!1,type:{name:"boolean"}},helperText:{defaultValue:{value:""},description:"helperText | error, success, warning message to be shown",name:"helperText",required:!1,type:{name:"string"}},disabled:{defaultValue:{value:"false"},description:"to disable the input field",name:"disabled",required:!1,type:{name:"boolean"}},required:{defaultValue:{value:"false"},description:"if true, input field will be mandatory",name:"required",required:!1,type:{name:"boolean"}},placeholder:{defaultValue:{value:"Enter input"},description:"placeholder for the input field",name:"placeholder",required:!1,type:{name:"string"}},className:{defaultValue:{value:""},description:"classnames to style the input field",name:"className",required:!1,type:{name:"string"}},noBorder:{defaultValue:null,description:"noBorder prop 'true' removes border of input",name:"noBorder",required:!1,type:{name:"boolean"}},onChange:{defaultValue:null,description:"onChange, onKeyDown, onBlur, onFocus actions",name:"onChange",required:!1,type:{name:"((event: ChangeEvent<HTMLInputElement>, item?: any) => void)"}},onKeyDown:{defaultValue:null,description:"",name:"onKeyDown",required:!1,type:{name:"((event: KeyboardEvent<HTMLInputElement>) => void)"}},onBlur:{defaultValue:null,description:"",name:"onBlur",required:!1,type:{name:"((event: FocusEvent<HTMLInputElement, Element>) => void)"}},onFocus:{defaultValue:null,description:"",name:"onFocus",required:!1,type:{name:"((event: FocusEvent<HTMLInputElement, Element>) => void)"}},onClick:{defaultValue:null,description:"",name:"onClick",required:!1,type:{name:"((event: MouseEvent<HTMLInputElement, MouseEvent>) => void)"}},onKeyUp:{defaultValue:null,description:"",name:"onKeyUp",required:!1,type:{name:"((event: KeyboardEvent<HTMLInputElement>) => void)"}},id:{defaultValue:null,description:"id to select the input field uniquely",name:"id",required:!1,type:{name:"string"}},autoComplete:{defaultValue:{value:"off"},description:"if on, suggestion popup will be displayed",name:"autoComplete",required:!1,type:{name:"enum",value:[{value:'"on"'},{value:'"off"'}]}},autoFocus:{defaultValue:{value:"false"},description:"if true, input field is in autofocus state",name:"autoFocus",required:!1,type:{name:"boolean"}},minValue:{defaultValue:{value:"-Infinity"},description:"minimum and maximum values for the number type input field and their functions",name:"minValue",required:!1,type:{name:"string | number"}},maxValue:{defaultValue:null,description:"",name:"maxValue",required:!1,type:{name:"string | number"}},transparentBackground:{defaultValue:{value:"false"},description:"background of the input field prop",name:"transparentBackground",required:!1,type:{name:"boolean"}},size:{defaultValue:{value:"small"},description:"size for the input field",name:"size",required:!1,type:{name:"enum",value:[{value:'"small"'},{value:'"medium"'}]}},isLabelRequired:{defaultValue:{value:"true"},description:"isLabelRequired for the input field without label,showing placeholder",name:"isLabelRequired",required:!1,type:{name:"boolean"}},reserveHelperTextSpace:{defaultValue:{value:"false"},description:"optional '15px' reserve helperText space prop for the input field",name:"reserveHelperTextSpace",required:!1,type:{name:"boolean"}},setUpdatedNumberValue:{defaultValue:{value:"() => {}"},description:"",name:"setUpdatedNumberValue",required:!1,type:{name:"((value: number) => void)"}}}}}catch{}export{j as I};
