import{j as e}from"./jsx-runtime-SKoiH9zj.js";import{r as h}from"./index-DJO9vBfz.js";import{D as j,a as k,b as C}from"./sortable.esm-DSTFstQe.js";import{T as g}from"./Typography-DdMJCn-_.js";import"./index-CFN9ZEHn.js";const T={DNDCore:j,DNDSortable:k,DNDUtilities:C},{DNDCore:{DndContext:I,KeyboardSensor:w,PointerSensor:v,useSensor:y,useSensors:A,closestCorners:P},DNDSortable:{useSortable:q,arrayMove:E,sortableKeyboardCoordinates:L,SortableContext:V,verticalListSortingStrategy:z},DNDUtilities:{CSS:K}}=T,p=({id:t,title:r})=>{const{attributes:o,listeners:d,setNodeRef:i,transform:c,transition:s}=q({id:t}),n={transition:s,transform:K.Transform.toString(c)};return e.jsx("div",{ref:i,style:n,...o,...d,className:"task",children:e.jsx(g,{as:"h1",fontSize:16,className:"task-title",children:r})})},u=({tasks:t})=>e.jsx("div",{className:"column",children:e.jsx(V,{items:t,strategy:z,children:t.map(r=>e.jsx(p,{id:r.id,title:r.title},r.id))})}),m=({onSubmit:t})=>{const[r,o]=h.useState(""),d=()=>{r&&(t(r),o(""))};return e.jsxs("div",{className:"container",children:[e.jsx("input",{className:"input",type:"text",value:r,onChange:i=>o(i.target.value)}),e.jsx("button",{onClick:d,className:"button",children:e.jsx(g,{fontSize:14,children:"Add"})})]})},x=()=>{const[t,r]=h.useState([{id:1,title:"Add tests to homepage"},{id:2,title:"Fix styling in about section"},{id:3,title:"Learn how to center a div"}]),o=s=>{r(n=>[...n,{id:n.length+1,title:s}])},d=A(y(v),y(w,{coordinateGetter:L})),i=s=>t.findIndex(n=>n.id===s),c=s=>{const{active:n,over:a}=s;n.id!==(a==null?void 0:a.id)&&r(_=>{const S=i(Number(n==null?void 0:n.id)),N=i(Number(a==null?void 0:a.id));return E(_,S,N)})};return e.jsxs("div",{className:"drag-and-drop-list",children:[e.jsx(g,{fontSize:32,fontWeight:"semi-bold",children:"Drag and Drop test âœ…"}),e.jsx(m,{onSubmit:o}),e.jsx(I,{sensors:d,collisionDetection:P,onDragEnd:c,children:e.jsx(u,{id:"toDo",tasks:t})})]})};try{p.displayName="Task",p.__docgenInfo={description:"",displayName:"Task",props:{id:{defaultValue:null,description:"",name:"id",required:!0,type:{name:"number"}},title:{defaultValue:null,description:"",name:"title",required:!0,type:{name:"string"}}}}}catch{}try{u.displayName="Column",u.__docgenInfo={description:"",displayName:"Column",props:{id:{defaultValue:null,description:"",name:"id",required:!0,type:{name:"string"}},tasks:{defaultValue:null,description:"",name:"tasks",required:!0,type:{name:"{ id: number; title: string; }[]"}}}}}catch{}try{m.displayName="Input",m.__docgenInfo={description:"",displayName:"Input",props:{onSubmit:{defaultValue:null,description:"",name:"onSubmit",required:!0,type:{name:"(input: string) => void"}}}}}catch{}const O={title:"Components/DragAndDrop",component:x,parameters:{layout:"centered",docs:{description:{component:"It is a drag and drop list component that allows users to reorder items by dragging and dropping them. Library used is dnd-kit/core, dnd-kit/sortable, dnd-kit/utilities",story:"This is a link of [dnd-kit library](https://www.npmjs.com/package/@dnd-kit/core) for reference to an external website."}}},tags:["autodocs"]},l={render:()=>e.jsx(x,{})};var f,D,b;l.parameters={...l.parameters,docs:{...(f=l.parameters)==null?void 0:f.docs,source:{originalSource:`{
  render: () => <DragAndDropList />
}`,...(b=(D=l.parameters)==null?void 0:D.docs)==null?void 0:b.source}}};const W=["Primary"];export{l as Primary,W as __namedExportsOrder,O as default};
