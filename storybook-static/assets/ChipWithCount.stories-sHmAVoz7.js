import{j as t}from"./jsx-runtime-SKoiH9zj.js";import{T as o}from"./Tooltip-jHEmaokv.js";import{T as i}from"./Typography-DdMJCn-_.js";import{t as d}from"./truncateText-D2e1-n0F.js";import{c as h}from"./checkEmpty-xi6SckPb.js";import"./index-DJO9vBfz.js";import"./index-CFN9ZEHn.js";import"./ThemeProvider-D5XEyBwi.js";import"./index-NZcV-alF.js";const s=({labelsList:e=[]})=>{const l=t.jsx("div",{className:"ff-chip-tooltip",children:e.map((p,a)=>a>0?t.jsx(i,{as:"div",children:p,className:"ff-chip-tooltip-label"},a):null)});return t.jsx(t.Fragment,{children:!h(e)&&t.jsxs("div",{className:"ff-chip-with-count-container",children:[t.jsx(o,{title:e[0],children:t.jsx(i,{as:"div",children:d(e[0]||"",10),className:"ff-chip-label",fontWeight:"medium"})}),e.length>1&&t.jsx(o,{title:t.jsx(i,{as:"div",children:l}),children:t.jsx(i,{as:"div",children:`+${e.length-1}`,className:"ff-chip-count",fontWeight:"medium"})})]})})};try{s.displayName="ChipWithCount",s.__docgenInfo={description:"",displayName:"ChipWithCount",props:{labelsList:{defaultValue:{value:"[]"},description:"The text to be displayed on the Chip and remaining as the count.",name:"labelsList",required:!1,type:{name:"string[]"}}}}}catch{}const v={title:"Components/ChipWithCount",component:s,parameters:{layout:"left"},tags:["autodocs"]},n={render:()=>{const e=["Automation Testing","Functional Testing","Smoke Testing","Manual Testing"];return t.jsx(s,{labelsList:e})}};var r,c,m;n.parameters={...n.parameters,docs:{...(r=n.parameters)==null?void 0:r.docs,source:{originalSource:`{
  render: () => {
    const labelsList = ['Automation Testing', 'Functional Testing', 'Smoke Testing', 'Manual Testing'];
    return <ChipWithCount labelsList={labelsList} />;
  }
}`,...(m=(c=n.parameters)==null?void 0:c.docs)==null?void 0:m.source}}};const N=["Primary"];export{n as Primary,N as __namedExportsOrder,v as default};
